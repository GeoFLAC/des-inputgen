const parameters = [
    // sim section
    { group: "sim", fullName: "sim.modelname", shortName: "modelname", cppType: "std::string", htmlType: "text", description: "Prefix for the output files", defaultValue: "", isRequired: false },
    { group: "sim", fullName: "sim.max_steps", shortName: "max_steps", cppType: "int", htmlType: "number", description: "Max. number of time steps", defaultValue: "", isRequired: false, attrs: { step: "1" } },
    { group: "sim", fullName: "sim.max_time_in_yr", shortName: "max_time_in_yr", cppType: "double", htmlType: "number", description: "Max. time (in years)", defaultValue: "", isRequired: false, attrs: { step: "any" } },
    { group: "sim", fullName: "sim.output_step_interval", shortName: "output_step_interval", cppType: "int", htmlType: "number", description: "Output step interval", defaultValue: "", isRequired: false, attrs: { step: "1" } },
    { group: "sim", fullName: "sim.output_time_interval_in_yr", shortName: "output_time_interval_in_yr", cppType: "double", htmlType: "number", description: "Output time interval (in years)", defaultValue: "", isRequired: false, attrs: { step: "any" } },
    { group: "sim", fullName: "sim.checkpoint_frame_interval", shortName: "checkpoint_frame_interval", cppType: "int", htmlType: "number", description: "How frequent to write checkpoint file (used for restarting simulation)?", defaultValue: "10", isRequired: false, attrs: { step: "1" } },
    { group: "sim", fullName: "sim.restarting_from_modelname", shortName: "restarting_from_modelname", cppType: "std::string", htmlType: "text", description: "Prefix for the checkpoint and save files for restarting.", defaultValue: "", isRequired: false },
    { group: "sim", fullName: "sim.restarting_from_frame", shortName: "restarting_from_frame", cppType: "int", htmlType: "number", description: "Which output frame to read for restarting?", defaultValue: "", isRequired: false, attrs: { step: "1" } },
    { group: "sim", fullName: "sim.is_restarting", shortName: "is_restarting", cppType: "bool", htmlType: "select", description: "Restarting from previous checkpoint file?", defaultValue: "false", isRequired: false, options: [{ value: "true", text: "Yes" }, { value: "false", text: "No" }] },
    { group: "sim", fullName: "sim.has_initial_checkpoint", shortName: "has_initial_checkpoint", cppType: "bool", htmlType: "select", description: "Output checkpoint file at 0th step?", defaultValue: "true", isRequired: false, options: [{ value: "true", text: "Yes" }, { value: "false", text: "No" }] },
    { group: "sim", fullName: "sim.has_marker_output", shortName: "has_marker_output", cppType: "bool", htmlType: "select", description: "Output marker coordinate and material?", defaultValue: "true", isRequired: false, options: [{ value: "true", text: "Yes" }, { value: "false", text: "No" }] },
    { group: "sim", fullName: "sim.has_output_during_remeshing", shortName: "has_output_during_remeshing", cppType: "bool", htmlType: "select", description: "Output immediately before and after remeshing?", defaultValue: "false", isRequired: false, options: [{ value: "true", text: "Yes" }, { value: "false", text: "No" }] },
    { group: "sim", fullName: "sim.is_outputting_averaged_fields", shortName: "is_outputting_averaged_fields", cppType: "bool", htmlType: "select", description: "Output time-averaged (smoothed) field variables or not. These fields are: velocity, strain rate, and stress.\nno: output instantaneous fields. The velocity and strain-rate might oscillate temporally.\nyes: output field variables averaged over mesh.quality_check_step_interval time steps.", defaultValue: "true", isRequired: false, options: [{ value: "true", text: "Yes" }, { value: "false", text: "No" }] },

    // mesh section
    {
        group: "mesh", fullName: "mesh.meshing_option", shortName: "meshing_option", cppType: "int", htmlType: "select", description: "How to create the new mesh?\n1: rectangular box with roughly uniform resolution\n2: rectangular box with rectangular zone of refined resolution\n90: read the bounding polygon from a .poly file\n91: same as 90, but the max. element size is normalized with resolution.\n95: read the mesh from from a .exo file", defaultValue: "1", isRequired: false, options: [
            { value: "1", text: "1: Uniform rectangular box" },
            { value: "2", text: "2: Refined rectangular box" },
            { value: "90", text: "90: From .poly file" },
            { value: "91", text: "91: From .poly file (normalized)" },
            { value: "95", text: "95: From .exo file" }
        ]
    },
    {
        group: "mesh", fullName: "mesh.meshing_elem_shape", shortName: "meshing_elem_shape", cppType: "int", htmlType: "select", description: "Element shape for meshing. 0: tetrahedra; 1: hexahedra.; 2: equilateral tetrahedra.", defaultValue: "0", isRequired: false, options: [
            { value: "0", text: "0: Tetrahedra" },
            { value: "1", text: "1: Hexahedra" },
            { value: "2", text: "2: Equilateral Tetrahedra" }
        ]
    },
    { group: "mesh", fullName: "mesh.meshing_verbosity", shortName: "meshing_verbosity", cppType: "int", htmlType: "number", description: "Output verbose during mesh/remeshing. -1 for no output.", defaultValue: "-1", isRequired: false, attrs: { step: "1" } },
    { group: "mesh", fullName: "mesh.meshing_sediment", shortName: "meshing_sediment", cppType: "bool", htmlType: "select", description: "Refine the elements with sediment marker during remeshing.", defaultValue: "false", isRequired: false, options: [{ value: "true", text: "Yes" }, { value: "false", text: "No" }] },
    {
        group: "mesh", fullName: "mesh.tetgen_optlevel", shortName: "tetgen_optlevel", cppType: "int", htmlType: "select", description: "Optimization level for tetgen. 0: no optimization; 1: multiple edge filps; 2: 1 & free vertex deletion; 3: 2 & new vertex insertion. High optimization level could slow down the speed of mesh generation. For 3D only.", defaultValue: "3", isRequired: false, options: [
            { value: "0", text: "0: No optimization" },
            { value: "1", text: "1: Multiple edge flips" },
            { value: "2", text: "2: Option 1 + free vertex deletion" },
            { value: "3", text: "3: Option 2 + new vertex insertion" }
        ]
    },
    { group: "mesh", fullName: "mesh.xlength", shortName: "xlength", cppType: "double", htmlType: "number", description: "Length of x (in meters)", defaultValue: "", isRequired: true, attrs: { step: "any" } },
    { group: "mesh", fullName: "mesh.ylength", shortName: "ylength", cppType: "double", htmlType: "number", description: "Length of y (in meters), for 3D only", defaultValue: "", isRequired: true, attrs: { step: "any" } },
    { group: "mesh", fullName: "mesh.zlength", shortName: "zlength", cppType: "double", htmlType: "number", description: "Length of z (in meters)", defaultValue: "", isRequired: true, attrs: { step: "any" } },
    { group: "mesh", fullName: "mesh.resolution", shortName: "resolution", cppType: "double", htmlType: "number", description: "Spatial resolution (in meters)", defaultValue: "", isRequired: true, attrs: { step: "any" } },
    { group: "mesh", fullName: "mesh.smallest_size", shortName: "smallest_size", cppType: "double", htmlType: "number", description: "The size of smallest element relative to an element with typical resolution", defaultValue: "0.01", isRequired: false, attrs: { step: "any" } },
    { group: "mesh", fullName: "mesh.largest_size", shortName: "largest_size", cppType: "double", htmlType: "number", description: "The size of largest element relative to an element with typical resolution", defaultValue: "30", isRequired: false, attrs: { step: "any" } },
    { group: "mesh", fullName: "mesh.sediment_size", shortName: "sediment_size", cppType: "double", htmlType: "number", description: "The size threshold of the refined sediment elements", defaultValue: "1.0", isRequired: false, attrs: { step: "any" } },
    { group: "mesh", fullName: "mesh.min_angle", shortName: "min_angle", cppType: "double", htmlType: "number", description: "Min. angle of all triangles (in degrees), for 2D only", defaultValue: "32.0", isRequired: false, attrs: { step: "any" } },
    { group: "mesh", fullName: "mesh.min_tet_angle", shortName: "min_tet_angle", cppType: "double", htmlType: "number", description: "Min. dihedral angle of all tetrahedra (in degrees), for 3D only", defaultValue: "22.0", isRequired: false, attrs: { step: "any" } },
    { group: "mesh", fullName: "mesh.max_ratio", shortName: "max_ratio", cppType: "double", htmlType: "number", description: "Max. radius / length ratio of all tetrahedra, for 3D only", defaultValue: "2.0", isRequired: false, attrs: { step: "any" } },
    { group: "mesh", fullName: "mesh.refined_zonex", shortName: "refined_zonex", cppType: "std::string", htmlType: "text", description: "Refining portion of xlength ([d0,d1]; 0<=d0<=d1<=1), for meshing_option=2 only", defaultValue: "[0.4, 0.6]", isRequired: false, placeholder: "[d0, d1]" }, // Corrected typo from original C++ comment "0,6"
    { group: "mesh", fullName: "mesh.refined_zoney", shortName: "refined_zoney", cppType: "std::string", htmlType: "text", description: "Refining portion of ylength ([d0,d1]; 0<=d0<=d1<=1), for meshing_option=2 only, for 3D only", defaultValue: "[0.4, 0.6]", isRequired: false, placeholder: "[d0, d1]" },
    { group: "mesh", fullName: "mesh.refined_zonez", shortName: "refined_zonez", cppType: "std::string", htmlType: "text", description: "Refining portion of zlength ([d0,d1]; 0<=d0<=d1<=1), for meshing_option=2 only", defaultValue: "[0.8, 1]", isRequired: false, placeholder: "[d0, d1]" },
    { group: "mesh", fullName: "mesh.poly_filename", shortName: "poly_filename", cppType: "std::string", htmlType: "text", description: "Filename of the input polygon, for meshing_option=90 or 91 only.\nThe file format is described in\nhttp://www.cs.cmu.edu/~quake/triangle.poly.html (2D) and\nhttp://wias-berlin.de/software/tetgen/fformats.poly.html (3D).\nLimitation: no point attributes, no boundary marker for points, no holes, and no regional attributes.\nUsers still need to provide these parameters: mesh.xlength, mesh.ylength, and mesh.zlength.", defaultValue: "mesh.poly", isRequired: false },
    { group: "mesh", fullName: "mesh.exo_filename", shortName: "exo_filename", cppType: "std::string", htmlType: "text", description: "Filename of the input polygon, for meshing_option=95 only.\nMeshing software like Trelis is supposed to be used for creating a mesh in the ExodusII format.\nLimitation: Only box-like domains with six sides are supported.\nUsers still need to provide these parameters: mesh.xlength, mesh.ylength, and mesh.zlength.", defaultValue: "mesh.exo", isRequired: false },
    { group: "mesh", fullName: "mesh.quality_check_step_interval", shortName: "quality_check_step_interval", cppType: "int", htmlType: "number", description: "How often to check mesh quality?", defaultValue: "100", isRequired: false, attrs: { step: "1" } },
    { group: "mesh", fullName: "mesh.min_quality", shortName: "min_quality", cppType: "double", htmlType: "number", description: "Min. mesh quality before remeshing (between 0 and 1)", defaultValue: "0.4", isRequired: false, attrs: { step: "any", min: "0", max: "1" } },
    { group: "mesh", fullName: "mesh.max_boundary_distortion", shortName: "max_boundary_distortion", cppType: "double", htmlType: "number", description: "Max. distance of boundary distortion before remeshing (in unit of mesh.resolution).", defaultValue: "0.25", isRequired: false, attrs: { step: "any" } },
    {
        group: "mesh", fullName: "mesh.remeshing_option", shortName: "remeshing_option", cppType: "int", htmlType: "select", description: "How to deal with the boundaries during remeshing?\n 0: no modification on any boundary.\n 1: move all bottom nodes to initial depth, other boundaries are intact.\n 2: create a new bottom boundary at the initial depth, other boundaries are intact (2D only).\n10: no modification on any boundary, except small boundary segments might get merged.\n11: move all bottom nodes to initial depth, other boundaries are intact, small boundary segments might get merged.\n12: flatten x0 when using fixed bottom boundary.\n13: move all bottom, left, and right nodes to initial dimensions.", defaultValue: "0", isRequired: false, options: [
            { value: "0", text: "0: No modification" },
            { value: "1", text: "1: Move bottom nodes to initial depth" },
            { value: "2", text: "2: New bottom boundary at initial depth (2D only)" },
            { value: "10", text: "10: No modification (small segments merge)" },
            { value: "11", text: "11: Move bottom nodes (small segments merge)" },
            { value: "12", text: "12: Flatten x0 with fixed bottom" },
            { value: "13", text: "13: Move bottom, left, right to initial dimensions" }
        ]
    },
    { group: "mesh", fullName: "mesh.is_discarding_internal_segments", shortName: "is_discarding_internal_segments", cppType: "bool", htmlType: "select", description: "Discarding internal segments after initial mesh is created? Using it when remeshing process can modify segments (e.g. remeshing_option=11).", defaultValue: "true", isRequired: false, options: [{ value: "true", text: "Yes" }, { value: "false", text: "No" }] },
    { group: "mesh", fullName: "mesh.mmg_debug", shortName: "mmg_debug", cppType: "int", htmlType: "select", description: "Run MMG remesher in debug mode? No:0; Yes:1", defaultValue: "0", isRequired: false, options: [{ value: "0", text: "No" }, { value: "1", text: "Yes" }] },
    { group: "mesh", fullName: "mesh.mmg_verbose", shortName: "mmg_verbose", cppType: "int", htmlType: "number", description: "Verbosity level of MMG remesher. For debugging, set a value greater than 4.", defaultValue: "0", isRequired: false, attrs: { step: "1" } },
    { group: "mesh", fullName: "mesh.mmg_hmax_factor", shortName: "mmg_hmax_factor", cppType: "double", htmlType: "number", description: "Factor multiplied to param.mesh.resolution to set the maximum element size", defaultValue: "2.0", isRequired: false, attrs: { step: "any" } },
    { group: "mesh", fullName: "mesh.mmg_hmin_factor", shortName: "mmg_hmin_factor", cppType: "double", htmlType: "number", description: "Factor multiplied to param.mesh.resolution to set the minimum element size", defaultValue: "0.2", isRequired: false, attrs: { step: "any" } },
    { group: "mesh", fullName: "mesh.mmg_hausd_factor", shortName: "mmg_hausd_factor", cppType: "double", htmlType: "number", description: "Factor multiplied to param.mesh.resolution to set the Hausdorff distance between original and remeshed surfaces.", defaultValue: "0.01", isRequired: false, attrs: { step: "any" } },

    // markers section
    {
        group: "markers", fullName: "markers.init_marker_option", shortName: "init_marker_option", cppType: "int", htmlType: "select", description: "How to generate markers?\n1: randomly distributed markers.\n2: regularly spaced markers.", defaultValue: "1", isRequired: false, options: [
            { value: "1", text: "1: Randomly distributed" },
            { value: "2", text: "2: Regularly spaced" }
        ]
    },
    { group: "markers", fullName: "markers.markers_per_element", shortName: "markers_per_element", cppType: "int", htmlType: "number", description: "Number of markers per element. Used when init_marker_option=1.", defaultValue: "4", isRequired: false, attrs: { step: "1" } },
    { group: "markers", fullName: "markers.init_marker_spacing", shortName: "init_marker_spacing", cppType: "double", htmlType: "number", description: "Spacing of markers (in unit of mesh.resolution). Used when init_marker_option=2.", defaultValue: "0.3", isRequired: false, attrs: { step: "any" } },
    { group: "markers", fullName: "markers.min_num_markers_in_element", shortName: "min_num_markers_in_element", cppType: "int", htmlType: "number", description: "When the number of markers in an element is less than this number, a new marker will be replenished in the element.", defaultValue: "3", isRequired: false, attrs: { step: "1" } },
    {
        group: "markers", fullName: "markers.replenishment_option", shortName: "replenishment_option", cppType: "int", htmlType: "select", description: "How to determine the mattype of replenished markers?\n0: always set to 0 (fastest option).\n1: by the probability of marker mattype of the element or surrounding elements.\n2: same as the mattype of the nearest marker (slowest option).", defaultValue: "2", isRequired: false, options: [
            { value: "0", text: "0: Always set to 0" },
            { value: "1", text: "1: By probability of surrounding mattype" },
            { value: "2", text: "2: Same as nearest marker" }
        ]
    },
    { group: "markers", fullName: "markers.random_seed", shortName: "random_seed", cppType: "uint", htmlType: "number", description: "Random seed of marker position. If 0, the current time is used as the seed.", defaultValue: "1", isRequired: false, attrs: { step: "1", min: "0" } },

    // control section
    { group: "control", fullName: "control.gravity", shortName: "gravity", cppType: "double", htmlType: "number", description: "Magnitude of the gravity (in m/s^2)", defaultValue: "10", isRequired: false, attrs: { step: "any" } },
    { group: "control", fullName: "control.characteristic_speed", shortName: "characteristic_speed", cppType: "double", htmlType: "number", description: "Characteristic tectonic speed (in m/s). It is used to estimate the size of stable time step. If it is 0, its value is inferred from the imposed boundary velocity. Set it to other value if the imposed boundary velocity is 0 everywhere.", defaultValue: "0", isRequired: false, attrs: { step: "any" } },
    { group: "control", fullName: "control.is_quasi_static", shortName: "is_quasi_static", cppType: "bool", htmlType: "select", description: "Is the simulation quasi-static or dynamic? If quasi-static, inertial scaling and strong damping is applied.", defaultValue: "true", isRequired: false, options: [{ value: "true", text: "Yes (Quasi-static)" }, { value: "false", text: "No (Dynamic)" }] },
    { group: "control", fullName: "control.dt_fraction", shortName: "dt_fraction", cppType: "double", htmlType: "number", description: "Take dt as a fraction of max. stable time step size (0-1).", defaultValue: "1.0", isRequired: false, attrs: { step: "any", min: "0", max: "1" } },
    { group: "control", fullName: "control.fixed_dt", shortName: "fixed_dt", cppType: "double", htmlType: "number", description: "Fixed dt size (in seconds). If 0, dt sized will be determined dynamically.", defaultValue: "0", isRequired: false, attrs: { step: "any" } },
    { group: "control", fullName: "control.inertial_scaling", shortName: "inertial_scaling", cppType: "double", htmlType: "number", description: "Scaling factor for inertial (a large number)", defaultValue: "1e5", isRequired: false, attrs: { step: "any" } },
    {
        group: "control", fullName: "control.damping_option", shortName: "damping_option", cppType: "int", htmlType: "select", description: "How to damp the elastic wave?\n0: no damping.\n1: damping/acceleration depends on force and direction of velocity.\n2: damping depends on force.\n3: damping/(weaker) acceleration depends on force and direction of velocity.\n4: Rayleigh damping.", defaultValue: "1", isRequired: false, options: [
            { value: "0", text: "0: No damping" },
            { value: "1", text: "1: Force & velocity direction dependent" },
            { value: "2", text: "2: Force dependent" },
            { value: "3", text: "3: Force & velocity direction dependent (weaker accel.)" },
            { value: "4", text: "4: Rayleigh damping" }
        ]
    },
    { group: "control", fullName: "control.damping_factor", shortName: "damping_factor", cppType: "double", htmlType: "number", description: "A factor for force damping (0-1)", defaultValue: "0.8", isRequired: false, attrs: { step: "any", min: "0", max: "1" } },
    {
        group: "control", fullName: "control.ref_pressure_option", shortName: "ref_pressure_option", cppType: "int", htmlType: "select", description: "How to define reference pressure?\n0: using density of the 0-th element to compute lithostatic pressure.\n1: computing reference pressure from the PREM model.\n2: computing reference pressure from the PREM model, modified for continent.", defaultValue: "0", isRequired: false, options: [
            { value: "0", text: "0: From 0-th element density" },
            { value: "1", text: "1: From PREM model" },
            { value: "2", text: "2: From PREM model (continent modified)" }
        ]
    },
    { group: "control", fullName: "control.is_using_mixed_stress", shortName: "is_using_mixed_stress", cppType: "bool", htmlType: "select", description: "If use Nodal Mixed Discretization For Stress", defaultValue: "true", isRequired: false, options: [{ value: "true", text: "Yes" }, { value: "false", text: "No" }] },
    { group: "control", fullName: "control.mixed_stress_reference_viscosity", shortName: "mixed_stress_reference_viscosity", cppType: "double", htmlType: "number", description: "The reference viscosity for appling mixed stress.", defaultValue: "1e19", isRequired: false, attrs: { step: "any" } },
    {
        group: "control", fullName: "control.surface_process_option", shortName: "surface_process_option", cppType: "int", htmlType: "select", description: "What kind of surface processes? 0: no surface processes. 1: using simple diffusion to modify surface topography. 101: custom function. 2: using simple deposition. 102: using simple deposition and diffusion.", defaultValue: "0", isRequired: false, options: [
            { value: "0", text: "0: None" },
            { value: "1", text: "1: Simple diffusion" },
            { value: "2", text: "2: Simple deposition" },
            { value: "101", text: "101: Custom function" },
            { value: "102", text: "102: Simple deposition and diffusion" }
        ]
    },
    { group: "control", fullName: "control.surface_diffusivity", shortName: "surface_diffusivity", cppType: "double", htmlType: "number", description: "Standard diffusition coefficient of surface topography (m^2/s)", defaultValue: "1e-6", isRequired: false, attrs: { step: "any" } },
    { group: "control", fullName: "control.surf_diff_ratio_terrig", shortName: "surf_diff_ratio_terrig", cppType: "double", htmlType: "number", description: "Ratio between terrigenous and standard Diffusition coefficients.", defaultValue: "1.0", isRequired: false, attrs: { step: "any" } },
    { group: "control", fullName: "control.surf_diff_ratio_marine", shortName: "surf_diff_ratio_marine", cppType: "double", htmlType: "number", description: "Ratio between marine and standard Diffusition coefficients.", defaultValue: "1.0", isRequired: false, attrs: { step: "any" } },
    { group: "control", fullName: "control.surf_depo_universal", shortName: "surf_depo_universal", cppType: "double", htmlType: "number", description: "Sedimentation rate of universal suspended deposite (in m/s).", defaultValue: "0.0", isRequired: false, attrs: { step: "any" } },
    { group: "control", fullName: "control.surf_base_level", shortName: "surf_base_level", cppType: "double", htmlType: "number", description: "Base level of surface processes.", defaultValue: "0.0", isRequired: false, attrs: { step: "any" } },
    { group: "control", fullName: "control.terrig_sediment_diffusivity", shortName: "terrig_sediment_diffusivity", cppType: "double", htmlType: "number", description: "Submarine diffusion coefficient (=100 m^2/yr, Kaufman et al., 1991) (in m^2/s).", defaultValue: "3.17e-6", isRequired: false, attrs: { step: "any" } },
    { group: "control", fullName: "control.terrig_depth_coefficient", shortName: "terrig_depth_coefficient", cppType: "double", htmlType: "number", description: "Submarine diffusion coefficient decay (Kaufman et al., 1991) (in m^-1).", defaultValue: "5e-4", isRequired: false, attrs: { step: "any" } },
    { group: "control", fullName: "control.is_reporting_terrigenous_info", shortName: "is_reporting_terrigenous_info", cppType: "bool", htmlType: "select", description: "If report surface terrigenous information.", defaultValue: "false", isRequired: false, options: [{ value: "true", text: "Yes" }, { value: "false", text: "No" }] },
    { group: "control", fullName: "control.hemipelagic_sedimentation_rate", shortName: "hemipelagic_sedimentation_rate", cppType: "double", htmlType: "number", description: "Hemipelagic sedimentation (Emmerich et al., 2009) (1 km/Myr ~= 3.17e-11 m/s)", defaultValue: "3.17e-11", isRequired: false, attrs: { step: "any" } },
    { group: "control", fullName: "control.hemipelagic_width", shortName: "hemipelagic_width", cppType: "double", htmlType: "number", description: "Width of the productivity function (m)", defaultValue: "90.0", isRequired: false, attrs: { step: "any" } },
    { group: "control", fullName: "control.hemipelagic_max_depth", shortName: "hemipelagic_max_depth", cppType: "double", htmlType: "number", description: "Maximum accumulation bathymetry (m)", defaultValue: "40.0", isRequired: false, attrs: { step: "any" } },
    { group: "control", fullName: "control.pelagic_sedimentation_rate", shortName: "pelagic_sedimentation_rate", cppType: "double", htmlType: "number", description: "Pelagic sedimentation rate (Emmerich et al., 2009) (0.05 km/Myr ~= 1.585e-12 m/s)", defaultValue: "1.585e-12", isRequired: false, attrs: { step: "any" } },
    { group: "control", fullName: "control.pelagic_increasing_width", shortName: "pelagic_increasing_width", cppType: "double", htmlType: "number", description: "Width of the suface increasing zone (m)", defaultValue: "30.0", isRequired: false, attrs: { step: "any" } },
    { group: "control", fullName: "control.terrig_sediment_volume", shortName: "terrig_sediment_volume", cppType: "double", htmlType: "number", description: "The volume of the sediment bring from continent source (in m^3/s). 5e7 ton/yr ~= 1 m^3/s", defaultValue: "1.0", isRequired: false, attrs: { step: "any" } },
    { group: "control", fullName: "control.terrig_sediment_area", shortName: "terrig_sediment_area", cppType: "double", htmlType: "number", description: "The are of the sediment bring from continent source (=10 m^2/yr) (in m^2/s). Assuming the width of the channel is 50 km, 5e7 ton/yr ~= 2.e-5 m^2/s", defaultValue: "3.17e-7", isRequired: false, attrs: { step: "any" } },
    { group: "control", fullName: "control.has_thermal_diffusion", shortName: "has_thermal_diffusion", cppType: "bool", htmlType: "select", description: "Does the model have thermal diffusion? If not, temperature is advected, but not diffused.", defaultValue: "true", isRequired: false, options: [{ value: "true", text: "Yes" }, { value: "false", text: "No" }] },
    { group: "control", fullName: "control.has_hydraulic_diffusion", shortName: "has_hydraulic_diffusion", cppType: "bool", htmlType: "select", description: "Does the model have hydraulic diffusion? If not, pore pressure is advected, but not diffused.", defaultValue: "false", isRequired: false, options: [{ value: "true", text: "Yes" }, { value: "false", text: "No" }] },
    { group: "control", fullName: "control.has_hydration_processes", shortName: "has_hydration_processes", cppType: "bool", htmlType: "select", description: "Does the model have hydration processes? It is required to model some types of phase changes.", defaultValue: "false", isRequired: false, options: [{ value: "true", text: "Yes" }, { value: "false", text: "No" }] },
    { group: "control", fullName: "control.hydration_migration_speed", shortName: "hydration_migration_speed", cppType: "double", htmlType: "number", description: "The upward migration speed of hydrous fluid (in m/s).", defaultValue: "3e-9", isRequired: false, attrs: { step: "any" } },
    { group: "control", fullName: "control.has_PT", shortName: "has_PT", cppType: "bool", htmlType: "select", description: "Does the model have Pseudo-transient (PT) loop?", defaultValue: "false", isRequired: false, options: [{ value: "true", text: "Yes" }, { value: "false", text: "No" }] },
    { group: "control", fullName: "control.PT_jump", shortName: "PT_jump", cppType: "bool", htmlType: "select", description: "Skip certain processes in PT loop to avoid accumulative effects. For example, surface diffusion.", defaultValue: "false", isRequired: false, options: [{ value: "true", text: "Yes" }, { value: "false", text: "No" }] },
    { group: "control", fullName: "control.PT_max_iter", shortName: "PT_max_iter", cppType: "int", htmlType: "number", description: "Maximum iteration for PT loop", defaultValue: "5000", isRequired: false, attrs: { step: "1" } },
    { group: "control", fullName: "control.PT_relative_tolerance", shortName: "PT_relative_tolerance", cppType: "double", htmlType: "number", description: "tolerance for relative change for breaking PT loop", defaultValue: "1e-6", isRequired: false, attrs: { step: "any" } },
    { group: "control", fullName: "control.has_moving_mesh", shortName: "has_moving_mesh", cppType: "bool", htmlType: "select", description: "Does the model update mesh coordinates (Lagrangian)?", defaultValue: "true", isRequired: false, options: [{ value: "true", text: "Yes" }, { value: "false", text: "No" }] },
    { group: "control", fullName: "control.has_ATS", shortName: "has_ATS", cppType: "bool", htmlType: "select", description: "Does the model consider adaptive time stepping?", defaultValue: "false", isRequired: false, options: [{ value: "true", text: "Yes" }, { value: "false", text: "No" }] },

    // bc section
    { group: "bc", fullName: "bc.surface_temperature", shortName: "surface_temperature", cppType: "double", htmlType: "number", description: "Surface temperature (in Kelvin)", defaultValue: "273", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.mantle_temperature", shortName: "mantle_temperature", cppType: "double", htmlType: "number", description: "Mantle temperature (in Kelvin)", defaultValue: "1600", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.has_winkler_foundation", shortName: "has_winkler_foundation", cppType: "bool", htmlType: "select", description: "Using Winkler foundation for the bottom boundary?", defaultValue: "true", isRequired: false, options: [{ value: "true", text: "Yes" }, { value: "false", text: "No" }] },
    { group: "bc", fullName: "bc.winkler_delta_rho", shortName: "winkler_delta_rho", cppType: "double", htmlType: "number", description: "Excess density of the bottom Winkler foundation (in kg/m^3)", defaultValue: "0", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.has_elastic_foundation", shortName: "has_elastic_foundation", cppType: "bool", htmlType: "select", description: "Using elastic foundation for the bottom boundary?", defaultValue: "false", isRequired: false, options: [{ value: "true", text: "Yes" }, { value: "false", text: "No" }] },
    { group: "bc", fullName: "bc.elastic_foundation_constant", shortName: "elastic_foundation_constant", cppType: "double", htmlType: "number", description: "Elastic constant for elastic foundation.", defaultValue: "1e11", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.has_water_loading", shortName: "has_water_loading", cppType: "bool", htmlType: "select", description: "Applying water loading for top boundary that is below sea level?", defaultValue: "true", isRequired: false, options: [{ value: "true", text: "Yes" }, { value: "false", text: "No" }] },
    { group: "bc", fullName: "bc.hbc_x0", shortName: "hbc_x0", cppType: "int", htmlType: "select", description: "Type of boundary condition for the left/western side. 0 indicates no flow boundary condition. 1 indicates initial pore pressure is fixed.", defaultValue: "0", isRequired: false, options: [{ value: "0", text: "0: No flow" }, { value: "1", text: "1: Fixed initial pore pressure" }] },
    { group: "bc", fullName: "bc.hbc_x1", shortName: "hbc_x1", cppType: "int", htmlType: "select", description: "Type of boundary condition for the right/eastern side", defaultValue: "0", isRequired: false, options: [{ value: "0", text: "0: No flow" }, { value: "1", text: "1: Fixed initial pore pressure" }] },
    { group: "bc", fullName: "bc.hbc_y0", shortName: "hbc_y0", cppType: "int", htmlType: "select", description: "Type of boundary condition for the front/southern side", defaultValue: "0", isRequired: false, options: [{ value: "0", text: "0: No flow" }, { value: "1", text: "1: Fixed initial pore pressure" }] },
    { group: "bc", fullName: "bc.hbc_y1", shortName: "hbc_y1", cppType: "int", htmlType: "select", description: "Type of boundary condition for the back/northern side", defaultValue: "0", isRequired: false, options: [{ value: "0", text: "0: No flow" }, { value: "1", text: "1: Fixed initial pore pressure" }] },
    { group: "bc", fullName: "bc.hbc_z0", shortName: "hbc_z0", cppType: "int", htmlType: "select", description: "Type of boundary condition for the bottom side", defaultValue: "0", isRequired: false, options: [{ value: "0", text: "0: No flow" }, { value: "1", text: "1: Fixed initial pore pressure" }] },
    { group: "bc", fullName: "bc.hbc_z1", shortName: "hbc_z1", cppType: "int", htmlType: "select", description: "Type of boundary condition for the top side", defaultValue: "0", isRequired: false, options: [{ value: "0", text: "0: No flow" }, { value: "1", text: "1: Fixed initial pore pressure" }] },
    { group: "bc", fullName: "bc.stress_bc_x0", shortName: "stress_bc_x0", cppType: "int", htmlType: "select", description: "Type of boundary condition for the left/western side. 0: no traction boundary condition, 1: traction in the x direction, 2: traction in the y direction, 3: traction in the z direction.", defaultValue: "0", isRequired: false, options: [{ value: "0", text: "0: No traction" }, { value: "1", text: "1: Traction in x" }, { value: "2", text: "2: Traction in y" }, { value: "3", text: "3: Traction in z" }] },
    { group: "bc", fullName: "bc.stress_bc_x1", shortName: "stress_bc_x1", cppType: "int", htmlType: "select", description: "Type of boundary condition for the right/eastern side", defaultValue: "0", isRequired: false, options: [{ value: "0", text: "0: No traction" }, { value: "1", text: "1: Traction in x" }, { value: "2", text: "2: Traction in y" }, { value: "3", text: "3: Traction in z" }] },
    { group: "bc", fullName: "bc.stress_bc_y0", shortName: "stress_bc_y0", cppType: "int", htmlType: "select", description: "Type of boundary condition for the front/southern side", defaultValue: "0", isRequired: false, options: [{ value: "0", text: "0: No traction" }, { value: "1", text: "1: Traction in x" }, { value: "2", text: "2: Traction in y" }, { value: "3", text: "3: Traction in z" }] },
    { group: "bc", fullName: "bc.stress_bc_y1", shortName: "stress_bc_y1", cppType: "int", htmlType: "select", description: "Type of boundary condition for the back/northern side", defaultValue: "0", isRequired: false, options: [{ value: "0", text: "0: No traction" }, { value: "1", text: "1: Traction in x" }, { value: "2", text: "2: Traction in y" }, { value: "3", text: "3: Traction in z" }] },
    { group: "bc", fullName: "bc.stress_bc_z0", shortName: "stress_bc_z0", cppType: "int", htmlType: "select", description: "Type of boundary condition for the bottom side", defaultValue: "0", isRequired: false, options: [{ value: "0", text: "0: No traction" }, { value: "1", text: "1: Traction in x" }, { value: "2", text: "2: Traction in y" }, { value: "3", text: "3: Traction in z" }] },
    { group: "bc", fullName: "bc.stress_bc_z1", shortName: "stress_bc_z1", cppType: "int", htmlType: "select", description: "Type of boundary condition for the top side", defaultValue: "0", isRequired: false, options: [{ value: "0", text: "0: No traction" }, { value: "1", text: "1: Traction in x" }, { value: "2", text: "2: Traction in y" }, { value: "3", text: "3: Traction in z" }] },
    { group: "bc", fullName: "bc.stress_val_x0", shortName: "stress_val_x0", cppType: "double", htmlType: "number", description: "Magnitude of stress at the left/western side (in Pa).", defaultValue: "0.0", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.stress_val_x1", shortName: "stress_val_x1", cppType: "double", htmlType: "number", description: "Magnitude of stress at the right/eastern side (in Pa).", defaultValue: "0.0", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.stress_val_y0", shortName: "stress_val_y0", cppType: "double", htmlType: "number", description: "Magnitude of stress at the front/southern side (in Pa).", defaultValue: "0.0", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.stress_val_y1", shortName: "stress_val_y1", cppType: "double", htmlType: "number", description: "Magnitude of stress at the back/northern side (in Pa).", defaultValue: "0.0", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.stress_val_z0", shortName: "stress_val_z0", cppType: "double", htmlType: "number", description: "Magnitude of stress at the bottom side (in Pa).", defaultValue: "0.0", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.stress_val_z1", shortName: "stress_val_z1", cppType: "double", htmlType: "number", description: "Magnitude of stress at the top side (in Pa).", defaultValue: "0.0", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.vbc_x0", shortName: "vbc_x0", cppType: "int", htmlType: "number", description: "Type of velocity boundary condition for the left/western side. Odd number indicates the normal component of the velocity is fixed. Possible type is \n0: all velocity components free;\n1: normal component fixed, shear components free;\n2: normal component free, shear components fixed at 0;\n3: normal component fixed, shear components fixed at 0;\n4: normal component free, shear component (not z) fixed, z component fixed at 0, only in 3D;\n5: normal component fixed at 0, shear component (not z) fixed, z component fixed at 0, only in 3D;\n7: normal component fixed, shear component (not z) fixed at 0, z component free, only in 3D;\n11: horizontal normal component fixed, z component and horizontal shear component free, only in 3D;\n13: horizontal normal component fixed, z component and horizontal shear component fixed at 0, only in 3D;", defaultValue: "1", isRequired: false, attrs: { step: "1" } }, // Consider making a select if options are finite and few
    { group: "bc", fullName: "bc.vbc_x1", shortName: "vbc_x1", cppType: "int", htmlType: "number", description: "Type of boundary condition for the right/eastern side", defaultValue: "1", isRequired: false, attrs: { step: "1" } },
    { group: "bc", fullName: "bc.vbc_val_x0", shortName: "vbc_val_x0", cppType: "double", htmlType: "number", description: "Value of boundary condition for left/western side (if velocity, unit is m/s; if stress, unit is Pa)", defaultValue: "-1e-9", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.vbc_val_division_x0_min", shortName: "vbc_val_division_x0_min", cppType: "double", htmlType: "number", description: "Ratio of first rate change division from the top to the right boundary width (for option = 8)", defaultValue: "1.0", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.vbc_val_division_x0_max", shortName: "vbc_val_division_x0_max", cppType: "double", htmlType: "number", description: "Ratio of second rate change division from the top to the right boundary width (for option = 8)", defaultValue: "1.0", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.vbc_val_x0_ratio0", shortName: "vbc_val_x0_ratio0", cppType: "double", htmlType: "number", description: "Ratio of the velocity at the surface of the left boundary width (for option = 1 and 3)", defaultValue: "1.0", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.vbc_val_x0_ratio1", shortName: "vbc_val_x0_ratio1", cppType: "double", htmlType: "number", description: "Ratio of the velocity at the vbc_val_division_x0_min of the left boundary width (for option = 1 and 3)", defaultValue: "1.0", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.vbc_val_x0_ratio2", shortName: "vbc_val_x0_ratio2", cppType: "double", htmlType: "number", description: "Ratio of the velocity at the vbc_val_division_x1_max of the left boundary width (for option = 1 and 3)", defaultValue: "1.0", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.vbc_val_x0_ratio3", shortName: "vbc_val_x0_ratio3", cppType: "double", htmlType: "number", description: "Ratio of the velocity at the bottom of the left boundary width (for option = 1 and 3)", defaultValue: "1.0", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.num_vbc_period_x0", shortName: "num_vbc_period_x0", cppType: "int", htmlType: "number", description: "Number of velocity period at x0", defaultValue: "1", isRequired: false, attrs: { step: "1" } },
    { group: "bc", fullName: "bc.num_vbc_period_x1", shortName: "num_vbc_period_x1", cppType: "int", htmlType: "number", description: "Number of velocity period at x1", defaultValue: "1", isRequired: false, attrs: { step: "1" } },
    { group: "bc", fullName: "bc.vbc_period_x0_time_in_yr", shortName: "vbc_period_x0_time_in_yr", cppType: "std::string", htmlType: "text", description: "End time of BC velocity periods at x0 side '[t0, t1, t2, ...]' (in yr)", defaultValue: "[1.e6]", isRequired: false, placeholder: "[t0, t1, ...]" },
    { group: "bc", fullName: "bc.vbc_period_x1_time_in_yr", shortName: "vbc_period_x1_time_in_yr", cppType: "std::string", htmlType: "text", description: "End time of BC velocity periods at x1 side '[t0, t1, t2, ...]' (in yr)", defaultValue: "[1.e6]", isRequired: false, placeholder: "[t0, t1, ...]" },
    { group: "bc", fullName: "bc.vbc_period_x0_ratio", shortName: "vbc_period_x0_ratio", cppType: "std::string", htmlType: "text", description: "rate ratio of BC velocity periods at x0 side '[r0, r1, r2, ...]' ", defaultValue: "[1.]", isRequired: false, placeholder: "[r0, r1, ...]" },
    { group: "bc", fullName: "bc.vbc_period_x1_ratio", shortName: "vbc_period_x1_ratio", cppType: "std::string", htmlType: "text", description: "rate ratio of BC velocity periods at x1 side '[r0, r1, r2, ...]' ", defaultValue: "[1.]", isRequired: false, placeholder: "[r0, r1, ...]" },
    { group: "bc", fullName: "bc.vbc_val_x1", shortName: "vbc_val_x1", cppType: "double", htmlType: "number", description: "Value of boundary condition for the right/eastern side (if velocity, unit is m/s; if stress, unit is Pa)", defaultValue: "1e-9", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.vbc_val_division_x1_min", shortName: "vbc_val_division_x1_min", cppType: "double", htmlType: "number", description: "Ratio of first rate change division from the top to the right boundary width (for option = 8)", defaultValue: "1.0", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.vbc_val_division_x1_max", shortName: "vbc_val_division_x1_max", cppType: "double", htmlType: "number", description: "Ratio of second rate change division from the top to the right boundary width (for option = 8)", defaultValue: "1.0", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.vbc_val_x1_ratio0", shortName: "vbc_val_x1_ratio0", cppType: "double", htmlType: "number", description: "Ratio of the velocity at the surface of the right boundary width (for option = 1 and 3)", defaultValue: "1.0", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.vbc_val_x1_ratio1", shortName: "vbc_val_x1_ratio1", cppType: "double", htmlType: "number", description: "Ratio of the velocity at the vbc_val_division_x0_min of the right boundary width (for option = 1 and 3)", defaultValue: "1.0", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.vbc_val_x1_ratio2", shortName: "vbc_val_x1_ratio2", cppType: "double", htmlType: "number", description: "Ratio of the velocity at the vbc_val_division_x1_max of the right boundary width (for option = 1 and 3)", defaultValue: "1.0", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.vbc_val_x1_ratio3", shortName: "vbc_val_x1_ratio3", cppType: "double", htmlType: "number", description: "Ratio of the velocity at the bottom of the right boundary width (for option = 1 and 3)", defaultValue: "1.0", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.vbc_y0", shortName: "vbc_y0", cppType: "int", htmlType: "number", description: "Type of boundary condition for the southern side", defaultValue: "0", isRequired: false, attrs: { step: "1" } },
    { group: "bc", fullName: "bc.vbc_y1", shortName: "vbc_y1", cppType: "int", htmlType: "number", description: "Type of boundary condition for the northern side", defaultValue: "0", isRequired: false, attrs: { step: "1" } },
    { group: "bc", fullName: "bc.vbc_val_y0", shortName: "vbc_val_y0", cppType: "double", htmlType: "number", description: "Value of boundary condition for the southern side (if velocity, unit is m/s; if stress, unit is Pa)", defaultValue: "0", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.vbc_val_y1", shortName: "vbc_val_y1", cppType: "double", htmlType: "number", description: "Value of boundary condition for the northern side (if velocity, unit is m/s; if stress, unit is Pa)", defaultValue: "0", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.vbc_z0", shortName: "vbc_z0", cppType: "int", htmlType: "number", description: "Type of boundary condition for the bottom side", defaultValue: "0", isRequired: false, attrs: { step: "1" } },
    { group: "bc", fullName: "bc.vbc_z1", shortName: "vbc_z1", cppType: "int", htmlType: "number", description: "Type of boundary condition for the top side", defaultValue: "0", isRequired: false, attrs: { step: "1" } },
    { group: "bc", fullName: "bc.vbc_val_z0", shortName: "vbc_val_z0", cppType: "double", htmlType: "number", description: "Value of boundary condition for the bottom side (if velocity, unit is m/s; if stress, unit is Pa)", defaultValue: "0", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.vbc_val_z1", shortName: "vbc_val_z1", cppType: "double", htmlType: "number", description: "Value of boundary condition for the top side (if velocity, unit is m/s; if stress, unit is Pa)", defaultValue: "0", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.vbc_val_z1_loading_period", shortName: "vbc_val_z1_loading_period", cppType: "double", htmlType: "number", description: "Loading period for the velocity on the top side", defaultValue: Number.MAX_VALUE.toString(), isRequired: false, attrs: { step: "any" } }, // std::numeric_limits<double>::max()
    { group: "bc", fullName: "bc.vbc_n0", shortName: "vbc_n0", cppType: "int", htmlType: "select", description: "Type of boundary condition for slant boundary #0 (only type 1, 3, 11, 13 are supported).", defaultValue: "1", isRequired: false, options: [{ value: "1", text: "1" }, { value: "3", text: "3" }, { value: "11", text: "11" }, { value: "13", text: "13" }] },
    { group: "bc", fullName: "bc.vbc_val_n0", shortName: "vbc_val_n0", cppType: "double", htmlType: "number", description: "Value of boundary condition for slant boundary #0 (if velocity, unit is m/s, outward normal direction is positive; if stress, unit is Pa)", defaultValue: "0", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.vbc_n1", shortName: "vbc_n1", cppType: "int", htmlType: "select", description: "Type of boundary condition for slant boundary #1 (only type 1, 3, 11, 13 are supported).", defaultValue: "1", isRequired: false, options: [{ value: "1", text: "1" }, { value: "3", text: "3" }, { value: "11", text: "11" }, { value: "13", text: "13" }] },
    { group: "bc", fullName: "bc.vbc_val_n1", shortName: "vbc_val_n1", cppType: "double", htmlType: "number", description: "Value of boundary condition for slant boundary #1 (if velocity, unit is m/s, outward normal direction is positive; if stress, unit is Pa)", defaultValue: "0", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.vbc_n2", shortName: "vbc_n2", cppType: "int", htmlType: "select", description: "Type of boundary condition for slant boundary #2 (only type 1, 3, 11, 13 are supported).", defaultValue: "1", isRequired: false, options: [{ value: "1", text: "1" }, { value: "3", text: "3" }, { value: "11", text: "11" }, { value: "13", text: "13" }] },
    { group: "bc", fullName: "bc.vbc_val_n2", shortName: "vbc_val_n2", cppType: "double", htmlType: "number", description: "Value of boundary condition for slant boundary #2 (if velocity, unit is m/s, outward normal direction is positive; if stress, unit is Pa)", defaultValue: "0", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.vbc_n3", shortName: "vbc_n3", cppType: "int", htmlType: "select", description: "Type of boundary condition for slant boundary #3 (only type 1, 3, 11, 13 are supported).", defaultValue: "1", isRequired: false, options: [{ value: "1", text: "1" }, { value: "3", text: "3" }, { value: "11", text: "11" }, { value: "13", text: "13" }] },
    { group: "bc", fullName: "bc.vbc_val_n3", shortName: "vbc_val_n3", cppType: "double", htmlType: "number", description: "Value of boundary condition for slant boundary #3 (if velocity, unit is m/s, outward normal direction is positive; if stress, unit is Pa)", defaultValue: "0", isRequired: false, attrs: { step: "any" } },
    { group: "bc", fullName: "bc.bottom_shear_zone_thickness", shortName: "bottom_shear_zone_thickness", cppType: "double", htmlType: "number", description: "Thickness of the bottom shear zone for bc_x0 = 3 and ndims = 2, unit is km.", defaultValue: "0.0", isRequired: false, attrs: { step: "any" } },

    // ic section
    {
        group: "ic", fullName: "ic.mattype_option", shortName: "mattype_option", cppType: "int", htmlType: "select", description: "How to set the initial material type of markers?\n0: marker's mattype is determined by regional attribute (currently can be modified only in the code or in a poly file).\n1: marker's mattype is layered.\n101: custom mattype.", defaultValue: "0", isRequired: false, options: [
            { value: "0", text: "0: Regional attribute" },
            { value: "1", text: "1: Layered" },
            { value: "101", text: "101: Custom mattype" }
        ]
    },
    { group: "ic", fullName: "ic.num_mattype_layers", shortName: "num_mattype_layers", cppType: "int", htmlType: "number", description: "Number of material layers", defaultValue: "2", isRequired: false, attrs: { step: "1" } },
    { group: "ic", fullName: "ic.layer_mattypes", shortName: "layer_mattypes", cppType: "std::string", htmlType: "text", description: "Material type of each material layer '[d0, d1, d2, ...]', d0<=d1<=d2...", defaultValue: "[0,1]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "ic", fullName: "ic.mattype_layer_depths", shortName: "mattype_layer_depths", cppType: "std::string", htmlType: "text", description: "Depths of the interfaces of each material layer '[d0, d1, d2, ...]', d0<=d1<=d2..., (in unit of zlength)", defaultValue: "[0.5]", isRequired: false, placeholder: "[d0, d1, ...]" },
    {
        group: "ic", fullName: "ic.weakzone_option", shortName: "weakzone_option", cppType: "int", htmlType: "select", description: "How to set the initial weak zone?\n0: no weak zone.\n1: planar weak zone with specified azimuth, inclination, halfwidth, min/max depth range, and center location.\n2: ellipsoidal weak zone with specified center location and semi-axes.\n3: Gaussian distribution point weak zone with specified center location and standard deviation.", defaultValue: "1", isRequired: false, options: [
            { value: "0", text: "0: No weak zone" },
            { value: "1", text: "1: Planar weak zone" },
            { value: "2", text: "2: Ellipsoidal weak zone" },
            { value: "3", text: "3: Gaussian point weak zone" }
        ]
    },
    { group: "ic", fullName: "ic.is_restarting_weakzone", shortName: "is_restarting_weakzone", cppType: "bool", htmlType: "select", description: "Create a new weakzone when restarting?", defaultValue: "false", isRequired: false, options: [{ value: "true", text: "Yes" }, { value: "false", text: "No" }] },
    { group: "ic", fullName: "ic.weakzone_plstrain", shortName: "weakzone_plstrain", cppType: "double", htmlType: "number", description: "Initial plastic strain in the weak zone", defaultValue: "0.1", isRequired: false, attrs: { step: "any" } },
    { group: "ic", fullName: "ic.weakzone_azimuth", shortName: "weakzone_azimuth", cppType: "double", htmlType: "number", description: "Azimuth angle (relative to +y axis) (in degree)", defaultValue: "0", isRequired: false, attrs: { step: "any" } },
    { group: "ic", fullName: "ic.weakzone_inclination", shortName: "weakzone_inclination", cppType: "double", htmlType: "number", description: "Inclination angle (relative to horizontal plane) (in degree)", defaultValue: "90", isRequired: false, attrs: { step: "any" } },
    { group: "ic", fullName: "ic.weakzone_halfwidth", shortName: "weakzone_halfwidth", cppType: "double", htmlType: "number", description: "Half-width of the weak zone (in unit of mesh.resolution)", defaultValue: "1.5", isRequired: false, attrs: { step: "any" } },
    { group: "ic", fullName: "ic.weakzone_y_min", shortName: "weakzone_y_min", cppType: "double", htmlType: "number", description: "Y-direction range (between 0 and 1, in unit of mesh.ylength)", defaultValue: "0", isRequired: false, attrs: { step: "any", min: "0", max: "1" } },
    { group: "ic", fullName: "ic.weakzone_y_max", shortName: "weakzone_y_max", cppType: "double", htmlType: "number", description: "Y-direction range (between 0 and 1, in unit of mesh.ylength)", defaultValue: "1", isRequired: false, attrs: { step: "any", min: "0", max: "1" } },
    { group: "ic", fullName: "ic.weakzone_depth_min", shortName: "weakzone_depth_min", cppType: "double", htmlType: "number", description: "Depth upper (shallower) range (between 0 and 1, in unit of mesh.zlength)", defaultValue: "0", isRequired: false, attrs: { step: "any", min: "0", max: "1" } },
    { group: "ic", fullName: "ic.weakzone_depth_max", shortName: "weakzone_depth_max", cppType: "double", htmlType: "number", description: "Depth lower (deeper) range (between 0 and 1, in unit of mesh.zlength)", defaultValue: "1", isRequired: false, attrs: { step: "any", min: "0", max: "1" } },
    { group: "ic", fullName: "ic.weakzone_xcenter", shortName: "weakzone_xcenter", cppType: "double", htmlType: "number", description: "Location of weak zone center in x direction (between 0 and 1, in unit of mesh.xlength)", defaultValue: "0.5", isRequired: false, attrs: { step: "any", min: "0", max: "1" } },
    { group: "ic", fullName: "ic.weakzone_ycenter", shortName: "weakzone_ycenter", cppType: "double", htmlType: "number", description: "Location of weak zone center in y direction (between 0 and 1, in unit of mesh.ylength)", defaultValue: "0.5", isRequired: false, attrs: { step: "any", min: "0", max: "1" } },
    { group: "ic", fullName: "ic.weakzone_zcenter", shortName: "weakzone_zcenter", cppType: "double", htmlType: "number", description: "Location of weak zone center in z direction (between 0 and 1, in unit of mesh.zlength)", defaultValue: "0.5", isRequired: false, attrs: { step: "any", min: "0", max: "1" } },
    { group: "ic", fullName: "ic.weakzone_xsemi_axis", shortName: "weakzone_xsemi_axis", cppType: "double", htmlType: "number", description: "Length of weak zone semi-axis in x direction (in meters)", defaultValue: "1e3", isRequired: false, attrs: { step: "any" } },
    { group: "ic", fullName: "ic.weakzone_ysemi_axis", shortName: "weakzone_ysemi_axis", cppType: "double", htmlType: "number", description: "Length of weak zone semi-axis in y direction (in meters)", defaultValue: "1e3", isRequired: false, attrs: { step: "any" } },
    { group: "ic", fullName: "ic.weakzone_zsemi_axis", shortName: "weakzone_zsemi_axis", cppType: "double", htmlType: "number", description: "Length of weak zone semi-axis in z direction (in meters)", defaultValue: "1e3", isRequired: false, attrs: { step: "any" } },
    { group: "ic", fullName: "ic.weakzone_standard_deviation", shortName: "weakzone_standard_deviation", cppType: "double", htmlType: "number", description: "Standard deviation of Gussian distribution point weak zone (in meters)", defaultValue: "1e3", isRequired: false, attrs: { step: "any" } },
    {
        group: "ic", fullName: "ic.temperature_option", shortName: "temperature_option", cppType: "int", htmlType: "select", description: "How to set the initial temperature?\n0: uniform half-space cooling.\n1: continental thermal gradient.\n2: equilibrium temperature for crustal radiogenic heating.\n90: temperature read from an external grid", defaultValue: "0", isRequired: false, options: [
            { value: "0", text: "0: Uniform half-space cooling" },
            { value: "1", text: "1: Continental thermal gradient" },
            { value: "2", text: "2: Equilibrium (crustal radiogenic heating)" },
            { value: "90", text: "90: Read from external grid" }
        ]
    },
    { group: "ic", fullName: "ic.oceanic_plate_age_in_yr", shortName: "oceanic_plate_age_in_yr", cppType: "double", htmlType: "number", description: "Age of the oceanic plate (in years), used for the temperature profile on the plate.", defaultValue: "60e6", isRequired: false, attrs: { step: "any" } },
    { group: "ic", fullName: "ic.num_radiogenic_heat_layer", shortName: "num_radiogenic_heat_layer", cppType: "int", htmlType: "number", description: "Number of radiogenic heat layers", defaultValue: "1", isRequired: false, attrs: { step: "1", min: "1" }, shortName: "nhlayer" }, // Note: C++ uses p.ic.nhlayer
    { group: "ic", fullName: "ic.radiogenic_heat_boundry", shortName: "radiogenic_heat_boundry", cppType: "std::string", htmlType: "text", description: "The layer boundry of radiogenic heating from the top to the bottom (depth -> positive, in meters).\nUsing -1 to indicate the top and bottom of the model.", defaultValue: "[-1,-1]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "ic", fullName: "ic.radiogenic_heat_mat_in_layer", shortName: "radiogenic_heat_mat_in_layer", cppType: "std::string", htmlType: "text", description: "The material type of radiogenic heating in each layer.", defaultValue: "[0]", isRequired: false, placeholder: "[m0, m1, ...]" },
    { group: "ic", fullName: "ic.radiogenic_folding_depth", shortName: "radiogenic_folding_depth", cppType: "double", htmlType: "number", description: "Radiogenic folding depth (in meters), used for the temperature profile on the plate.", defaultValue: "10e3", isRequired: false, attrs: { step: "any" } },
    { group: "ic", fullName: "ic.radiogenic_heating_of_crust", shortName: "radiogenic_heating_of_crust", cppType: "double", htmlType: "number", description: "Radiogenic heating of crust (in W/kg), used for the temperature profile on the plate.", defaultValue: "1e-9", isRequired: false, attrs: { step: "any" } },
    { group: "ic", fullName: "ic.continental_plate_age_in_yr", shortName: "continental_plate_age_in_yr", cppType: "double", htmlType: "number", description: "Age of the continental plate (in years), used for the temperature profile on the plate.", defaultValue: "100e6", isRequired: false, attrs: { step: "any" } },
    { group: "ic", fullName: "ic.radiogenic_crustal_thickness", shortName: "radiogenic_crustal_thickness", cppType: "double", htmlType: "number", description: "Radiogenic crustal thickness (in meters), used for the temperature profile on the plate.", defaultValue: "30e3", isRequired: false, attrs: { step: "any" } },
    { group: "ic", fullName: "ic.lithospheric_thickness", shortName: "lithospheric_thickness", cppType: "double", htmlType: "number", description: "Lithospheric thickness (in meters), used for the temperature profile on the plate.", defaultValue: "100e3", isRequired: false, attrs: { step: "any" } },
    { group: "ic", fullName: "ic.Temp_filename", shortName: "Temp_filename", cppType: "std::string", htmlType: "text", description: "Filename of the input thermal field, for temperature_option=90.\nThe file format is: <x-coord y-coord (if 3D) z-coord temperature>.\nCan be generated by COMSOL.", defaultValue: "Thermal.dat", isRequired: false },
    { group: "ic", fullName: "ic.Nodes_filename", shortName: "Nodes_filename", cppType: "std::string", htmlType: "text", description: "Filename of the mesh coordinates, for temperature_option=90.\nThe nodes may be ordered differently with the thermal file. The file format is: <x-coord y-coord (if 3D) z-coord>.\nCan be generated by COMSOL.", defaultValue: "Coord.dat", isRequired: false },
    { group: "ic", fullName: "ic.Connectivity_filename", shortName: "Connectivity_filename", cppType: "std::string", htmlType: "text", description: "Filename of the mesh connectivity, for temperature_option = 90 only.\nThe file format is: <#ofnode0 #ofnode1 #ofnode2 #ofnode3 (if 3D)>.\nCan be generated by COMSOL.", defaultValue: "Connectivity.dat", isRequired: false },
    { group: "ic", fullName: "ic.isostasy_adjustment_time_in_yr", shortName: "isostasy_adjustment_time_in_yr", cppType: "double", htmlType: "number", description: "Time for spinning up isostasy adjustment.", defaultValue: "0", isRequired: false, attrs: { step: "any" } },
    { group: "ic", fullName: "ic.excess_pore_pressure", shortName: "excess_pore_pressure", cppType: "double", htmlType: "number", description: "Initial excess_pore_pressure except for boundary.", defaultValue: "0.0", isRequired: false, attrs: { step: "any" } },
    { group: "ic", fullName: "ic.has_body_force_adjustment", shortName: "has_body_force_adjustment", cppType: "bool", htmlType: "select", description: "Conducting PT loop to get initial stress field from inital guess", defaultValue: "false", isRequired: false, options: [{ value: "true", text: "Yes" }, { value: "false", text: "No" }] },

    // mat section
    {
        group: "mat", fullName: "mat.rheology_type", shortName: "rheology_type", cppType: "std::string", htmlType: "select", description: "Type of rheology, either 'elastic', 'viscous' (experimental), 'maxwell', 'elasto-plastic', 'elasto-visco-plastic', 'elasto-plastic-rsf', or 'elasto-visco-plastic-rsf'", defaultValue: "", isRequired: true, options: [ // Default value not specified in C++, but it's required
            { value: "elastic", text: "elastic" },
            { value: "viscous", text: "viscous (experimental)" },
            { value: "maxwell", text: "maxwell" },
            { value: "elasto-plastic", text: "elasto-plastic" },
            { value: "elasto-visco-plastic", text: "elasto-visco-plastic" },
            { value: "elasto-plastic-rsf", text: "elasto-plastic-rsf" },
            { value: "elasto-visco-plastic-rsf", text: "elasto-visco-plastic-rsf" }
        ]
    },
    { group: "mat", fullName: "mat.is_plane_strain", shortName: "is_plane_strain", cppType: "bool", htmlType: "select", description: "Is the rheology formulation in plane strain (2D elasto-plastic case only)?", defaultValue: "false", isRequired: false, options: [{ value: "true", text: "Yes" }, { value: "false", text: "No" }] },
    {
        group: "mat", fullName: "mat.phase_change_option", shortName: "phase_change_option", cppType: "int", htmlType: "select", description: "What kind of phase changes?\n0: no phase changes.\n1: simple rules of subduction-related phase changes. See SimpleSubduction class in phasechanges.cxx for more details.\n2: simple rules of middle ocean ridge formation. See SimpleRifting class in phasechanges.cxx for more details.\n101: custom phase changes.", defaultValue: "0", isRequired: false, options: [
            { value: "0", text: "0: No phase changes" },
            { value: "1", text: "1: Simple subduction rules" },
            { value: "2", text: "2: Simple MOR formation rules" },
            { value: "101", text: "101: Custom phase changes" }
        ]
    },
    { group: "mat", fullName: "mat.num_materials", shortName: "num_materials", cppType: "int", htmlType: "number", description: "Number of material types", defaultValue: "1", isRequired: false, attrs: { step: "1", min: "1" }, shortNameAlias: "nmat" }, // C++ uses p.mat.nmat
    { group: "mat", fullName: "mat.mattype_mantle", shortName: "mattype_mantle", cppType: "int", htmlType: "number", description: "Index of mantle material. For continental thermal gradient", defaultValue: "0", isRequired: false, attrs: { step: "1" } },
    { group: "mat", fullName: "mat.mattype_depleted_mantle", shortName: "mattype_depleted_mantle", cppType: "int", htmlType: "number", description: "Index of depleted mantle material. For phase change of middle ocean ridge", defaultValue: "0", isRequired: false, attrs: { step: "1" } },
    { group: "mat", fullName: "mat.mattype_partial_melting_mantle", shortName: "mattype_partial_melting_mantle", cppType: "int", htmlType: "number", description: "Index of parital melting mantle material. For phase change of middle ocean ridge", defaultValue: "0", isRequired: false, attrs: { step: "1" } },
    { group: "mat", fullName: "mat.mattype_crust", shortName: "mattype_crust", cppType: "int", htmlType: "number", description: "Index of crust material.  For continental thermal gradient", defaultValue: "0", isRequired: false, attrs: { step: "1" } },
    { group: "mat", fullName: "mat.mattype_oceanic_crust", shortName: "mattype_oceanic_crust", cppType: "int", htmlType: "number", description: "Index of oceanic crust. For formation of middle ocean ridge in phasechanges.cxx", defaultValue: "0", isRequired: false, attrs: { step: "1" } },
    { group: "mat", fullName: "mat.mattype_sed", shortName: "mattype_sed", cppType: "int", htmlType: "number", description: "Index of sediment material. Should be the same as mattype['sediment'] in 2vtk.py for sediment time convertion", defaultValue: "0", isRequired: false, attrs: { step: "1" } },
    { group: "mat", fullName: "mat.max_viscosity", shortName: "max_viscosity", cppType: "double", htmlType: "number", description: "Max. value of viscosity (in Pa.s)", defaultValue: "1e24", isRequired: false, attrs: { step: "any" }, shortNameAlias: "visc_max" },
    { group: "mat", fullName: "mat.min_viscosity", shortName: "min_viscosity", cppType: "double", htmlType: "number", description: "Min. value of viscosity (in Pa.s)", defaultValue: "1e18", isRequired: false, attrs: { step: "any" }, shortNameAlias: "visc_min" },
    { group: "mat", fullName: "mat.max_tension", shortName: "max_tension", cppType: "double", htmlType: "number", description: "Max. value of tensile stress (in Pa)", defaultValue: "1e9", isRequired: false, attrs: { step: "any" }, shortNameAlias: "tension_max" },
    { group: "mat", fullName: "mat.max_thermal_diffusivity", shortName: "max_thermal_diffusivity", cppType: "double", htmlType: "number", description: "Max. value of thermal diffusivity (in m^2/s)", defaultValue: "5e-6", isRequired: false, attrs: { step: "any" }, shortNameAlias: "therm_diff_max" },
    { group: "mat", fullName: "mat.convert_rate_oceanic_crust", shortName: "convert_rate_oceanic_crust", cppType: "double", htmlType: "number", description: "Converting rate from melting to oceanic crust. For formation of middle ocean ridge in bc.cxx", defaultValue: "1e-13", isRequired: false, attrs: { step: "any" } },
    { group: "mat", fullName: "mat.rho0", shortName: "rho0", cppType: "std::string", htmlType: "text", description: "Density of the materials at 0 Pa and 273 K '[d0, d1, d2, ...]' (in kg/m^3)", defaultValue: "[3210]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.alpha", shortName: "alpha", cppType: "std::string", htmlType: "text", description: "Volumetic thermal expansion of the materials '[d0, d1, d2, ...]' (in 1/Kelvin)", defaultValue: "[3e-5]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.bulk_modulus", shortName: "bulk_modulus", cppType: "std::string", htmlType: "text", description: "Bulk modulus of the materials '[d0, d1, d2, ...]' (in Pa)", defaultValue: "[128.2e9]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.shear_modulus", shortName: "shear_modulus", cppType: "std::string", htmlType: "text", description: "Shear modulus of the materials '[d0, d1, d2, ...]' (in Pa)", defaultValue: "[80.5e9]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.visc_exponent", shortName: "visc_exponent", cppType: "std::string", htmlType: "text", description: "Exponents of non-linear viscosity of the materials'[d0, d1, d2, ...]' ", defaultValue: "[3.05]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.visc_coefficient", shortName: "visc_coefficient", cppType: "std::string", htmlType: "text", description: "Pre-exponent coefficient of non-linear viscosity of the materials '[d0, d1, d2, ...]' ", defaultValue: "[1.25e-1]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.visc_activation_energy", shortName: "visc_activation_energy", cppType: "std::string", htmlType: "text", description: "Activation energy of non-linear viscosity of the materials '[d0, d1, d2, ...]' (in J/mol)", defaultValue: "[3.76e5]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.visc_activation_volume", shortName: "visc_activation_volume", cppType: "std::string", htmlType: "text", description: "Activation volume of non-linear viscosity of the materials '[d0, d1, d2, ...]' (in m^3/mol)", defaultValue: "[0.e-6]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.heat_capacity", shortName: "heat_capacity", cppType: "std::string", htmlType: "text", description: "Heat capacity (isobaric) of the materials '[d0, d1, d2, ...]' (in J/kg/Kelvin)", defaultValue: "[1e3]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.therm_cond", shortName: "therm_cond", cppType: "std::string", htmlType: "text", description: "Thermal conductivity of the materials '[d0, d1, d2, ...]' (in W/m/Kelvin)", defaultValue: "[3]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.radiogenic_heat_prod", shortName: "radiogenic_heat_prod", cppType: "std::string", htmlType: "text", description: "Radiogenic heat production rate of the materials '[d0, d1, d2, ...]' (in W/kg) Only for initial temperature condition", defaultValue: "[0]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.pls0", shortName: "pls0", cppType: "std::string", htmlType: "text", description: "Plastic strain of the materials where weakening starts '[d0, d1, d2, ...]' (no unit)", defaultValue: "[0]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.pls1", shortName: "pls1", cppType: "std::string", htmlType: "text", description: "Plastic strain of the materials where weakening saturates '[d0, d1, d2, ...]' (no unit)", defaultValue: "[0.1]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.cohesion0", shortName: "cohesion0", cppType: "std::string", htmlType: "text", description: "Cohesion of the materials when weakening starts '[d0, d1, d2, ...]' (in Pa)", defaultValue: "[4e7]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.cohesion1", shortName: "cohesion1", cppType: "std::string", htmlType: "text", description: "Cohesion of the materials when weakening saturates '[d0, d1, d2, ...]' (in Pa)", defaultValue: "[4e6]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.friction_angle0", shortName: "friction_angle0", cppType: "std::string", htmlType: "text", description: "Friction angle of the materials when weakening starts '[d0, d1, d2, ...]' (in degree)", defaultValue: "[30]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.friction_angle1", shortName: "friction_angle1", cppType: "std::string", htmlType: "text", description: "Friction angle of the materials when weakening saturates '[d0, d1, d2, ...]' (in degree)", defaultValue: "[5]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.dilation_angle0", shortName: "dilation_angle0", cppType: "std::string", htmlType: "text", description: "Dilation angle of the materials when weakening starts '[d0, d1, d2, ...]' (in degree)", defaultValue: "[0]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.dilation_angle1", shortName: "dilation_angle1", cppType: "std::string", htmlType: "text", description: "Dilation angle of the materials when weakening saturates '[d0, d1, d2, ...]' (in degree)", defaultValue: "[0]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.porosity", shortName: "porosity", cppType: "std::string", htmlType: "text", description: "Porosity of the materials '[d0, d1, d2, ...]' (no unit)", defaultValue: "[0.0]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.hydraulic_perm", shortName: "hydraulic_perm", cppType: "std::string", htmlType: "text", description: "Intrinsic permeability of the materials '[d0, d1, d2, ...]' (m^2)", defaultValue: "[1e-14]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.fluid_rho0", shortName: "fluid_rho0", cppType: "std::string", htmlType: "text", description: "Density of the fluids at 0 Pa and 273 K '[d0, d1, d2, ...]' (in kg/m^3)", defaultValue: "[1000]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.fluid_alpha", shortName: "fluid_alpha", cppType: "std::string", htmlType: "text", description: "Thermal expansivity of the fluids at 0 Pa and 293 K '[d0, d1, d2, ...]' (in K^-1)", defaultValue: "[2.07e-4]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.fluid_bulk_modulus", shortName: "fluid_bulk_modulus", cppType: "std::string", htmlType: "text", description: "Bulk modulus of the fluids at 0 Pa and 293 K '[d0, d1, d2, ...]' (in Pa)", defaultValue: "[2.17e9]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.fluid_visc", shortName: "fluid_visc", cppType: "std::string", htmlType: "text", description: "Dynamic viscosity of the fluids at 0 Pa and 293 K '[d0, d1, d2, ...]' (in Pa)", defaultValue: "[1.002e-3]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.biot_coeff", shortName: "biot_coeff", cppType: "std::string", htmlType: "text", description: "Biot-Willis coefficient (HM coupling coeff) '[d0, d1, d2, ...]' (no unit)", defaultValue: "[1.0]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.bulk_modulus_s", shortName: "bulk_modulus_s", cppType: "std::string", htmlType: "text", description: "Bulk modulus of the solid grains or minerals '[d0, d1, d2, ...]' (Pa)", defaultValue: "[37e9]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.direct_a", shortName: "direct_a", cppType: "std::string", htmlType: "text", description: "rate-and-state friction parameter a '[d0, d1, d2, ...]' (-)", defaultValue: "[0.020]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.evolution_b", shortName: "evolution_b", cppType: "std::string", htmlType: "text", description: "rate-and-state friction parameter b '[d0, d1, d2, ...]' (-)", defaultValue: "[0.025]", isRequired: false, placeholder: "[d0, d1, ...]" },
    { group: "mat", fullName: "mat.characteristic_velocity", shortName: "characteristic_velocity", cppType: "std::string", htmlType: "text", description: "rate-and-state friction parameter V0 '[d0, d1, d2, ...]' (-)", defaultValue: "[1e-6]", isRequired: false, placeholder: "[d0, d1, ...]" },

    // debug section
    { group: "debug", fullName: "debug.dt", shortName: "dt", cppType: "bool", htmlType: "select", description: "Print all dt criteria", defaultValue: "false", isRequired: false, options: [{ value: "true", text: "Yes" }, { value: "false", text: "No" }] }
];